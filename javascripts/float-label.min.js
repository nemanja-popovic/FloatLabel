/* Float label by Nemanja Popovic */!function (a) { "namespace FloatLabel"; a.fn.FloatLabel = function (b) { var c = a.extend({ hasIcon: !1, iconSide: "right", direction: "float-label-up" }, b); return this.each(function () { var b = this, d = { I: a(b), L: "", labelText: "", Icon: "", iconName: "username", hasIcon: c.hasIcon, iconSide: c.iconSide, floatDirection: c.direction, getConfigData: function () { var a = this; a.I.attr("data-label-text") && (a.labelText = a.I.data("label-text")), a.I.attr("data-label-direction") && (a.floatDirection = "float-label-" + a.I.data("label-direction")), a.I.attr("data-label-icon") && (a.iconName = "" + a.I.data("label-icon"), a.hasIcon = !0), a.I.attr("data-label-icon-side") && (a.iconSide = a.I.data("label-icon-side")) }, createElements: function () { var b = this; b.I.addClass("float-label-input"), b.I.wrap('<div class="float-label-wrapper">'), b.L = a('<label class="float-label-label"></label>'), b.L.text(b.labelText), b.I.parent().append(b.L), b.hasIcon && (b.Icon = a('<i class="float-label-icon"></i>'), b.Icon.addClass("float-label-icon-" + b.iconName), b.I.parent().prepend(b.Icon), b.I.parent().addClass(b.iconSide + "-addon")) }, hideLabel: function () { var a = this; a.I.removeClass("float-label-dirty"), a.L.removeClass(a.floatDirection) }, showLabel: function () { var a = this; a.I.addClass("float-label-dirty"), a.L.addClass(a.floatDirection) }, checkContent: function () { var a = this, b = a.I.val(); a.I.hasClass("float-label-dirty") ? "" === b && a.hideLabel() : "" !== b && a.showLabel() }, basicEvents: function () { var a = this; a.I.change(function () { a.checkContent() }), a.I.focus(function () { a.checkContent() }), a.I.blur(function () { a.checkContent() }), a.I.keydown(function () { a.checkContent() }), a.I.keyup(function () { a.checkContent() }), a.L.click(function () { a.I.focus() }) }, init: function () { this.getConfigData(), this.createElements(), this.basicEvents() } }; d.init() }) } }(jQuery);